# Analytics queries
query GetStreamAnalytics($stream: String!, $timeRange: TimeRangeInput) {
  streamAnalytics(stream: $stream, timeRange: $timeRange) {
    stream
    totalViews
    totalViewTime
    peakViewers
    averageViewers
    uniqueViewers
    timeRange {
      start
      end
    }
    # New health metrics
    currentHealthScore
    averageHealthScore
    frameJitterMs
    keyframeStabilityMs
    currentIssues
    bufferState
    packetLossPercentage
    qualityTier
    currentCodec
    currentResolution
    currentBitrate
    currentFps
    rebufferCount
    alertCount
  }
}

query GetViewerMetrics($stream: String, $timeRange: TimeRangeInput) {
  viewerMetrics(stream: $stream, timeRange: $timeRange) {
    timestamp
    viewerCount
  }
}

query GetPlatformOverview($timeRange: TimeRangeInput) {
  platformOverview(timeRange: $timeRange) {
    totalStreams
    totalViewers
    totalBandwidth
    totalUsers
    timeRange {
      start
      end
    }
  }
}

query GetUsageRecords($timeRange: TimeRangeInput) {
  usageRecords(timeRange: $timeRange) {
    id
    resourceType
    quantity
    unit
    cost
    timestamp
  }
}

# Geographic Analytics queries
query GetViewerGeographics($stream: String, $timeRange: TimeRangeInput) {
  viewerGeographics(stream: $stream, timeRange: $timeRange) {
    timestamp
    stream
    nodeId
    countryCode
    city
    latitude
    longitude
    viewerCount
    connectionAddr
    eventType
    source
  }
}

query GetGeographicDistribution($stream: String, $timeRange: TimeRangeInput) {
  geographicDistribution(stream: $stream, timeRange: $timeRange) {
    timeRange {
      start
      end
    }
    stream
    topCountries {
      countryCode
      viewerCount
      percentage
      cities {
        city
        countryCode
        viewerCount
        percentage
        latitude
        longitude
      }
    }
    topCities {
      city
      countryCode
      viewerCount
      percentage
      latitude
      longitude
    }
    uniqueCountries
    uniqueCities
    totalViewers
    viewersByCountry {
      timestamp
      countryCode
      viewerCount
    }
  }
}

query GetLoadBalancingMetrics($timeRange: TimeRangeInput) {
  loadBalancingMetrics(timeRange: $timeRange) {
    timestamp
    stream
    selectedNode
    nodeId
    clientIp
    clientCountry
    clientLatitude
    clientLongitude
    nodeLatitude
    nodeLongitude
    score
    status
    details
    routingDistance
    eventType
    source
  }
}